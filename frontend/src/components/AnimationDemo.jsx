import { useState } from 'react'
import { motion } from 'framer-motion'
import AnimatedCard from './AnimatedCard'
import AnimatedButton from './AnimatedButton'
import AnimatedInput from './AnimatedInput'
import AnimatedList from './AnimatedList'
import AnimatedToast from './AnimatedToast'
import { 
  Star, 
  Heart, 
  Zap, 
  Sparkles, 
  Palette, 
  Music, 
  Camera, 
  Gamepad2,
  Eye,
  Mail,
  Lock,
  Search,
  CheckCircle
} from 'lucide-react'

const AnimationDemo = () => {
  const [showToast, setShowToast] = useState(false)
  const [toastType, setToastType] = useState('success')
  const [inputValue, setInputValue] = useState('')
  const [selectedItems, setSelectedItems] = useState([])

  const demoItems = [
    { id: 1, name: '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ 1', icon: 'üåü' },
    { id: 2, name: '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ 2', icon: 'üí´' },
    { id: 3, name: '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ 3', icon: '‚ú®' },
    { id: 4, name: '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ 4', icon: 'üé®' },
    { id: 5, name: '–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ 5', icon: 'üé≠' }
  ]

  const showDemoToast = (type) => {
    setToastType(type)
    setShowToast(true)
    setTimeout(() => setShowToast(false), 3000)
  }

  const renderDemoItem = (item, index, { isSelected, isHovered }) => (
    <AnimatedCard
      variant={isSelected ? 'gradient' : 'elevated'}
      hoverEffect="tilt"
      icon={item.icon}
      title={item.name}
      className={`demo-item ${isSelected ? 'ring-2 ring-blue-500' : ''}`}
    >
      <p className="text-sm text-gray-600 dark:text-gray-400">
        –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å –∞–Ω–∏–º–∞—Ü–∏—è–º–∏
      </p>
      <div className="mt-3 flex gap-2">
        <AnimatedButton
          variant="outline"
          size="small"
          onClick={() => showDemoToast('success')}
        >
          –£—Å–ø–µ—Ö
        </AnimatedButton>
        <AnimatedButton
          variant="outline"
          size="small"
          onClick={() => showDemoToast('error')}
        >
          –û—à–∏–±–∫–∞
        </AnimatedButton>
      </div>
    </AnimatedCard>
  )

  return (
    <div className="animation-demo p-6 space-y-8">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="text-center"
      >
        <h1 className="text-3xl font-bold text-gray-900 dark:text-white mb-4">
          üé® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
        </h1>
        <p className="text-gray-600 dark:text-gray-400 text-lg">
          –ò–∑—É—á–∏—Ç–µ –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –º–∏–∫—Ä–æ–∏–Ω—Ç–µ—Ä–∞–∫—Ü–∏–∏
        </p>
      </motion.div>

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ */}
      <section className="space-y-6">
        <motion.h2
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.2, duration: 0.5 }}
          className="text-2xl font-semibold text-gray-900 dark:text-white"
        >
          üé¥ –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        </motion.h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          <AnimatedCard
            variant="default"
            hoverEffect="lift"
            icon={<Star className="w-6 h-6 text-yellow-500" />}
            title="–ü–æ–¥—ä–µ–º"
            subtitle="Hover —ç—Ñ—Ñ–µ–∫—Ç –ø–æ–¥—ä–µ–º–∞"
          >
            <p className="text-sm text-gray-600 dark:text-gray-400">
              –ö–∞—Ä—Ç–æ—á–∫–∞ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            </p>
          </AnimatedCard>

          <AnimatedCard
            variant="elevated"
            hoverEffect="glow"
            icon={<Heart className="w-6 h-6 text-red-500" />}
            title="–°–≤–µ—á–µ–Ω–∏–µ"
            subtitle="Hover —ç—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è"
          >
            <p className="text-sm text-gray-600 dark:text-gray-400">
              –ö–∞—Ä—Ç–æ—á–∫–∞ —Å–≤–µ—Ç–∏—Ç—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            </p>
          </AnimatedCard>

          <AnimatedCard
            variant="glass"
            hoverEffect="scale"
            icon={<Zap className="w-6 h-6 text-blue-500" />}
            title="–ú–∞—Å—à—Ç–∞–±"
            subtitle="Hover —ç—Ñ—Ñ–µ–∫—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è"
          >
            <p className="text-sm text-gray-600 dark:text-gray-400">
              –ö–∞—Ä—Ç–æ—á–∫–∞ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            </p>
          </AnimatedCard>

          <AnimatedCard
            variant="gradient"
            hoverEffect="tilt"
            icon={<Sparkles className="w-6 h-6 text-purple-500" />}
            title="–ù–∞–∫–ª–æ–Ω"
            subtitle="Hover —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞–∫–ª–æ–Ω–∞"
          >
            <p className="text-sm text-gray-600 dark:text-gray-400">
              –ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–∞–∫–ª–æ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            </p>
          </AnimatedCard>

          <AnimatedCard
            variant="elevated"
            hoverEffect="lift"
            icon={<Palette className="w-6 h-6 text-green-500" />}
            title="–¶–≤–µ—Ç–∞"
            subtitle="–†–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è"
          >
            <p className="text-sm text-gray-600 dark:text-gray-400">
              –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ —Ü–≤–µ—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã
            </p>
          </AnimatedCard>

          <AnimatedCard
            variant="glass"
            hoverEffect="glow"
            icon={<Music className="w-6 h-6 text-pink-500" />}
            title="–°—Ç–µ–∫–ª–æ"
            subtitle="–≠—Ñ—Ñ–µ–∫—Ç –º–∞—Ç–æ–≤–æ–≥–æ —Å—Ç–µ–∫–ª–∞"
          >
            <p className="text-sm text-gray-600 dark:text-gray-400">
              –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–µ–∫–ª—è–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω
            </p>
          </AnimatedCard>
        </div>
      </section>

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ */}
      <section className="space-y-6">
        <motion.h2
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.4, duration: 0.5 }}
          className="text-2xl font-semibold text-gray-900 dark:text-white"
        >
          üîò –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        </motion.h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <AnimatedButton
            variant="primary"
            size="large"
            icon={<Camera className="w-5 h-5" />}
            onClick={() => showDemoToast('success')}
            fullWidth
          >
            –û—Å–Ω–æ–≤–Ω–∞—è
          </AnimatedButton>

          <AnimatedButton
            variant="secondary"
            size="large"
            icon={<Gamepad2 className="w-5 h-5" />}
            onClick={() => showDemoToast('info')}
            fullWidth
          >
            –í—Ç–æ—Ä–∏—á–Ω–∞—è
          </AnimatedButton>

          <AnimatedButton
            variant="outline"
            size="large"
            icon={<Eye className="w-5 h-5" />}
            onClick={() => showDemoToast('warning')}
            fullWidth
          >
            –ö–æ–Ω—Ç—É—Ä–Ω–∞—è
          </AnimatedButton>

          <AnimatedButton
            variant="ghost"
            size="large"
            icon={<Mail className="w-5 h-5" />}
            onClick={() => showDemoToast('error')}
            fullWidth
          >
            –ü—Ä–∏–∑—Ä–∞—á–Ω–∞—è
          </AnimatedButton>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <AnimatedButton
            variant="primary"
            size="small"
            loading={true}
            fullWidth
          >
            –ó–∞–≥—Ä—É–∑–∫–∞
          </AnimatedButton>

          <AnimatedButton
            variant="secondary"
            size="medium"
            disabled={true}
            fullWidth
          >
            –û—Ç–∫–ª—é—á–µ–Ω–∞
          </AnimatedButton>

          <AnimatedButton
            variant="outline"
            size="large"
            icon={<Lock className="w-5 h-5" />}
            iconPosition="right"
            fullWidth
          >
            –ò–∫–æ–Ω–∫–∞ —Å–ø—Ä–∞–≤–∞
          </AnimatedButton>
        </div>
      </section>

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ */}
      <section className="space-y-6">
        <motion.h2
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.6, duration: 0.5 }}
          className="text-2xl font-semibold text-gray-900 dark:text-white"
        >
          üìù –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—è –≤–≤–æ–¥–∞
        </motion.h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <AnimatedInput
            label="–û–±—ã—á–Ω–æ–µ –ø–æ–ª–µ"
            value={inputValue}
            onChange={(e) => setInputValue(e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç..."
            leftIcon={<Search className="w-5 h-5" />}
          />

          <AnimatedInput
            label="–ü–æ–ª–µ —Å –æ—à–∏–±–∫–æ–π"
            value=""
            error="–≠—Ç–æ –ø–æ–ª–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è"
            leftIcon={<Mail className="w-5 h-5" />}
          />

          <AnimatedInput
            label="–ü–æ–ª–µ —Å —É—Å–ø–µ—Ö–æ–º"
            value="–£—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ"
            success="–ü–æ–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
            leftIcon={<CheckCircle className="w-5 h-5" />}
          />

          <AnimatedInput
            label="–ü–∞—Ä–æ–ª—å"
            type="password"
            value="password123"
            showPasswordToggle={true}
            leftIcon={<Lock className="w-5 h-5" />}
          />
        </div>
      </section>

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–æ–≤ */}
      <section className="space-y-6">
        <motion.h2
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.8, duration: 0.5 }}
          className="text-2xl font-semibold text-gray-900 dark:text-white"
        >
          üìã –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ø–∏—Å–∫–∏
        </motion.h2>
        
        <AnimatedList
          items={demoItems}
          renderItem={renderDemoItem}
          keyExtractor={(item) => item.id}
          animationType="slideUp"
          staggerDelay={0.1}
          selectable={true}
          selectedItems={selectedItems}
          onSelectionChange={setSelectedItems}
          className="space-y-4"
        />
      </section>

      {/* –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
      <section className="space-y-6">
        <motion.h2
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 1.0, duration: 0.5 }}
          className="text-2xl font-semibold text-gray-900 dark:text-white"
        >
          üîî –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        </motion.h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <AnimatedButton
            variant="outline"
            onClick={() => showDemoToast('success')}
            fullWidth
          >
            –£—Å–ø–µ—Ö
          </AnimatedButton>
          
          <AnimatedButton
            variant="outline"
            onClick={() => showDemoToast('error')}
            fullWidth
          >
            –û—à–∏–±–∫–∞
          </AnimatedButton>
          
          <AnimatedButton
            variant="outline"
            onClick={() => showDemoToast('warning')}
            fullWidth
          >
            –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
          </AnimatedButton>
          
          <AnimatedButton
            variant="outline"
            onClick={() => showDemoToast('info')}
            fullWidth
          >
            –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          </AnimatedButton>
        </div>
      </section>

      {/* Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
      {showToast && (
        <AnimatedToast
          message={`–≠—Ç–æ ${toastType === 'success' ? '—É—Å–ø–µ—à–Ω–æ–µ' : 
                   toastType === 'error' ? '–æ—à–∏–±–æ—á–Ω–æ–µ' : 
                   toastType === 'warning' ? '–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞—é—â–µ–µ' : 
                   '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ'} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ`}
          type={toastType}
          position="bottom-center"
          onClose={() => setShowToast(false)}
        />
      )}
    </div>
  )
}

export default AnimationDemo
