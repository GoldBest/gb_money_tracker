#!/bin/bash

echo "üöÄ –ù–∞—á–∏–Ω–∞—é –¥–µ–ø–ª–æ–π TG Money MiniApp –Ω–∞ Render..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∞–ø–∫–µ
if [ ! -f "render.yaml" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: render.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã
echo "üìã –ü—Ä–æ–≤–µ—Ä—è—é –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –¥–µ–ø–ª–æ—é..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º backend
if [ ! -f "backend/server.prod.js" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: backend/server.prod.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend build
if [ ! -d "frontend/dist" ]; then
    echo "üì¶ –°–æ–∑–¥–∞—é production build –¥–ª—è frontend..."
    cd frontend
    npm run build
    cd ..
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
if [ ! -f "backend/package.json" ] || ! grep -q "pg" backend/package.json; then
    echo "‚ùå –û—à–∏–±–∫–∞: PostgreSQL –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ backend"
    exit 1
fi

echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"

# –°–æ–∑–¥–∞–µ–º .env.example –¥–ª—è production
echo "üîß –°–æ–∑–¥–∞—é .env.example –¥–ª—è production..."
cat > .env.production.example << EOF
# Production Environment Variables
NODE_ENV=production
BOT_TOKEN=your_bot_token_here
WEBAPP_URL=https://gb-money-tracker-frontend.onrender.com
DATABASE_URL=postgresql://username:password@host:port/database
EOF

echo "üìù –°–æ–∑–¥–∞–Ω .env.production.example"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º git —Å—Ç–∞—Ç—É—Å
echo "üìä –ü—Ä–æ–≤–µ—Ä—è—é git —Å—Ç–∞—Ç—É—Å..."
if [ -n "$(git status --porcelain)" ]; then
    echo "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –µ—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git"
    echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–∫–æ–º–º–∏—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º"
    echo ""
    git status --short
    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–µ–ø–ª–æ–π? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "‚ùå –î–µ–ø–ª–æ–π –æ—Ç–º–µ–Ω–µ–Ω"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ render.yaml –≤–∞–ª–∏–¥–µ–Ω
echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é render.yaml..."
if ! command -v yamllint &> /dev/null; then
    echo "‚ö†Ô∏è  yamllint –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏:"
    echo "   brew install yamllint (macOS)"
    echo "   –∏–ª–∏ pip install yamllint"
else
    if yamllint render.yaml; then
        echo "‚úÖ render.yaml –≤–∞–ª–∏–¥–µ–Ω"
    else
        echo "‚ùå render.yaml —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏"
        exit 1
    fi
fi

echo ""
echo "üéØ –ì–æ—Ç–æ–≤–æ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Render!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://render.com"
echo "2. –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ"
echo "3. –ù–∞–∂–º–∏—Ç–µ 'New +' –∏ –≤—ã–±–µ—Ä–∏—Ç–µ 'Blueprint'"
echo "4. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –≤–∞—à GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
echo "5. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π 'tg-money-miniapp'"
echo "6. Render –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–∞—Ä—É–∂–∏—Ç render.yaml"
echo "7. –ù–∞–∂–º–∏—Ç–µ 'Apply' –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤"
echo ""
echo "üîß –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ –¥–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
echo "   - BOT_TOKEN: –≤–∞—à —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞"
echo "   - DATABASE_URL: –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω"
echo ""
echo "üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: docs/RENDER_DEPLOYMENT_GUIDE.md"
echo ""
echo "ÔøΩÔøΩ –£–¥–∞—á–∏ —Å –¥–µ–ø–ª–æ–µ–º!"
