#!/bin/bash

echo "üîê –ù–ê–°–¢–†–û–ô–ö–ê GITHUB SECRETS –î–õ–Ø –ê–í–¢–û–î–ï–ü–õ–û–Ø"
echo "=========================================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "package.json" ]; then
    error "–°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞!"
    exit 1
fi

echo "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å GitHub Secrets –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è."
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ gh CLI
if ! command -v gh &> /dev/null; then
    error "GitHub CLI (gh) –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo ""
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GitHub CLI:"
    echo "  macOS: brew install gh"
    echo "  Ubuntu: sudo apt install gh"
    echo "  Windows: winget install GitHub.cli"
    echo ""
    echo "–ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: gh auth login"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ GitHub
if ! gh auth status &> /dev/null; then
    error "–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ GitHub CLI!"
    echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: gh auth login"
    exit 1
fi

success "GitHub CLI –Ω–∞–π–¥–µ–Ω –∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"

# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
REPO_INFO=$(gh repo view --json name,owner,defaultBranchRef)
REPO_NAME=$(echo $REPO_INFO | jq -r '.name')
REPO_OWNER=$(echo $REPO_INFO | jq -r '.owner.login')
DEFAULT_BRANCH=$(echo $REPO_INFO | jq -r '.defaultBranchRef.name')

echo ""
log "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_OWNER/$REPO_NAME"
log "–í–µ—Ç–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $DEFAULT_BRANCH"
echo ""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vercel
echo "üöÄ –ù–ê–°–¢–†–û–ô–ö–ê VERCEL"
echo "-------------------"

echo "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://vercel.com/account/tokens"
echo "2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω"
echo "3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω"

read -p "–í–≤–µ–¥–∏—Ç–µ VERCEL_TOKEN: " VERCEL_TOKEN

if [ -z "$VERCEL_TOKEN" ]; then
    error "VERCEL_TOKEN –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º Vercel Project ID
echo ""
echo "–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ Vercel..."
cd frontend

if [ ! -d ".vercel" ]; then
    warning "–ü—Ä–æ–µ–∫—Ç Vercel –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º..."
    echo "n" | vercel --yes
fi

if [ -f ".vercel/project.json" ]; then
    VERCEL_PROJECT_ID=$(cat .vercel/project.json | jq -r '.projectId')
    VERCEL_ORG_ID=$(cat .vercel/project.json | jq -r '.orgId')
    
    log "Vercel Project ID: $VERCEL_PROJECT_ID"
    log "Vercel Org ID: $VERCEL_ORG_ID"
else
    warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å Project ID –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    read -p "–í–≤–µ–¥–∏—Ç–µ VERCEL_PROJECT_ID: " VERCEL_PROJECT_ID
    read -p "–í–≤–µ–¥–∏—Ç–µ VERCEL_ORG_ID: " VERCEL_ORG_ID
fi

cd ..

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Railway
echo ""
echo "üöÇ –ù–ê–°–¢–†–û–ô–ö–ê RAILWAY"
echo "-------------------"

echo "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://railway.app/account/tokens"
echo "2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω"
echo "3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω"

read -p "–í–≤–µ–¥–∏—Ç–µ RAILWAY_TOKEN: " RAILWAY_TOKEN

if [ -z "$RAILWAY_TOKEN" ]; then
    error "RAILWAY_TOKEN –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!"
    exit 1
fi

echo ""
echo "–ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ Railway..."
RAILWAY_SERVICES=$(railway service list --json 2>/dev/null || echo "[]")

if [ "$RAILWAY_SERVICES" != "[]" ]; then
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
    echo "$RAILWAY_SERVICES" | jq -r '.[] | "  - \(.name) (\(.id))"'
    echo ""
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è backend: " RAILWAY_SERVICE_NAME
else
    warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ Railway"
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è backend: " RAILWAY_SERVICE_NAME
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã –≤ GitHub
echo ""
log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã –≤ GitHub..."

# Vercel —Å–µ–∫—Ä–µ—Ç—ã
gh secret set VERCEL_TOKEN --body "$VERCEL_TOKEN"
gh secret set VERCEL_PROJECT_ID --body "$VERCEL_PROJECT_ID"
gh secret set VERCEL_ORG_ID --body "$VERCEL_ORG_ID"

# Railway —Å–µ–∫—Ä–µ—Ç—ã
gh secret set RAILWAY_TOKEN --body "$RAILWAY_TOKEN"
gh secret set RAILWAY_SERVICE_NAME --body "$RAILWAY_SERVICE_NAME"

success "–í—Å–µ —Å–µ–∫—Ä–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ GitHub!"

echo ""
echo "‚úÖ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo ""
echo "–¢–µ–ø–µ—Ä—å –ø—Ä–∏ –∫–∞–∂–¥–æ–º push –≤ –≤–µ—Ç–∫—É $DEFAULT_BRANCH –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å:"
echo "  1. üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π frontend –Ω–∞ Vercel"
echo "  2. üöÇ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π backend –Ω–∞ Railway"
echo "  3. üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
echo ""
echo "üìù –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –¥–µ–ø–ª–æ—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤:"
echo "  https://github.com/$REPO_OWNER/$REPO_NAME/actions"
echo ""
echo "üîß –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Å–µ–∫—Ä–µ—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "  gh secret set SECRET_NAME --body 'new_value'"
echo ""
echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∞–≤—Ç–æ–¥–µ–ø–ª–æ—é!"
