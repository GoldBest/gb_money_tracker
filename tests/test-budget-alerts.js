const axios = require('axios');

const BASE_URL = 'http://localhost:3001/api';

async function testBudgetAlerts() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –±—é–¥–∂–µ—Ç–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...\n');

    // 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const userResponse = await axios.post(`${BASE_URL}/users`, {
      telegram_id: 'test_user_123',
      username: 'testuser',
      first_name: 'Test User'
    });
    const user = userResponse.data;
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: ID ${user.id}\n`);

    // 2. –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    const categoriesResponse = await axios.get(`${BASE_URL}/users/${user.id}/categories`);
    const categories = categoriesResponse.data;
    const expenseCategory = categories.find(c => c.type === 'expense');
    console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—É—á–µ–Ω—ã: ${categories.length} —à—Ç. (–≤—ã–±—Ä–∞–Ω–∞: ${expenseCategory.name})\n`);

    // 3. –°–æ–∑–¥–∞–µ–º –±—é–¥–∂–µ—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    console.log('3. –°–æ–∑–¥–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
    const alertResponse = await axios.post(`${BASE_URL}/budget-alerts`, {
      user_id: user.id,
      category_id: expenseCategory.id,
      limit_amount: 1000,
      period: 'monthly'
    });
    const alert = alertResponse.data.alert;
    console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: ID ${alert.id}, –ª–∏–º–∏—Ç ${alert.limit_amount} —Ä—É–±.\n`);

    // 4. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('4. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');
    const alertsResponse = await axios.get(`${BASE_URL}/budget-alerts?user_id=${user.id}`);
    const alerts = alertsResponse.data;
    console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã: ${alerts.length} —à—Ç.`);
    console.log(`   –ü–µ—Ä–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${alerts[0].category_name}, –ª–∏–º–∏—Ç: ${alerts[0].limit_amount}, —Ç–µ–∫—É—â–∏–µ —Ç—Ä–∞—Ç—ã: ${alerts[0].current_spending}\n`);

    // 5. –û–±–Ω–æ–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    console.log('5. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
    const updateResponse = await axios.put(`${BASE_URL}/budget-alerts/${alert.id}`, {
      user_id: user.id,
      limit_amount: 1500
    });
    console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${updateResponse.data.message}\n`);

    // 6. –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    console.log('6. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
    const toggleResponse = await axios.patch(`${BASE_URL}/budget-alerts/${alert.id}/toggle`, {
      user_id: user.id
    });
    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω: ${toggleResponse.data.message}\n`);

    // 7. –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    console.log('7. –£–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
    const deleteResponse = await axios.delete(`${BASE_URL}/budget-alerts/${alert.id}?user_id=${user.id}`);
    console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ: ${deleteResponse.data.message}\n`);

    // 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ
    console.log('8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è...');
    const finalAlertsResponse = await axios.get(`${BASE_URL}/budget-alerts?user_id=${user.id}`);
    const finalAlerts = finalAlertsResponse.data;
    console.log(`‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: ${finalAlerts.length} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n`);

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

testBudgetAlerts();
