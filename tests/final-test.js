#!/usr/bin/env node

const axios = require('axios');

const BASE_URL = 'http://localhost:3002';
const FRONTEND_URL = 'http://localhost:8081';

console.log('üß™ –ù–∞—á–∏–Ω–∞—é —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...\n');

async function testBackendAPI() {
  console.log('üì° –¢–µ—Å—Ç–∏—Ä—É—é Backend API...');
  
  try {
    // Health check
    const health = await axios.get(`${BASE_URL}/api/health`);
    console.log('‚úÖ Health check:', health.data.status);
    
    // Categories
    const categories = await axios.get(`${BASE_URL}/api/users/1/categories`);
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', categories.data.length, '—à—Ç.');
    
    // Transactions
    const transactions = await axios.get(`${BASE_URL}/api/users/1/transactions`);
    console.log('‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', transactions.data.length, '—à—Ç.');
    
    // Statistics
    const stats = await axios.get(`${BASE_URL}/api/users/1/stats`);
    console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ë–∞–ª–∞–Ω—Å:', stats.data.balance, '—Ä—É–±.');
    
    // Create test transaction
    const newTransaction = await axios.post(`${BASE_URL}/api/transactions`, {
      amount: 2000,
      type: 'income',
      category_id: 1,
      description: '–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç',
      user_id: 1
    });
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å ID:', newTransaction.data.id);
    
    return true;
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –≤ Backend API:', error.message);
    return false;
  }
}

async function testFrontend() {
  console.log('\nüåê –¢–µ—Å—Ç–∏—Ä—É—é Frontend...');
  
  try {
    const response = await axios.get(FRONTEND_URL);
    if (response.status === 200) {
      console.log('‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω');
      return true;
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –≤ Frontend:', error.message);
    return false;
  }
}



async function testTelegramBot() {
  console.log('\nü§ñ –¢–µ—Å—Ç–∏—Ä—É—é Telegram –±–æ—Ç–∞...');
  
  try {
    const botToken = require('dotenv').config().parsed.BOT_TOKEN;
    if (!botToken) {
      console.log('‚ö†Ô∏è  BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
      return false;
    }
    
    const response = await axios.get(`https://api.telegram.org/bot${botToken}/getMe`);
    if (response.data.ok) {
      console.log('‚úÖ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç:', response.data.result.first_name);
      return true;
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –≤ Telegram –±–æ—Ç–µ:', error.message);
    return false;
  }
}

async function runAllTests() {
  const results = {
    backend: await testBackendAPI(),
    frontend: await testFrontend(),
    telegram: await testTelegramBot()
  };
  
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  console.log('=====================================');
  console.log(`Backend API: ${results.backend ? '‚úÖ' : '‚ùå'}`);
  console.log(`Frontend: ${results.frontend ? '‚úÖ' : '‚ùå'}`);
  console.log(`Telegram –±–æ—Ç: ${results.telegram ? '‚úÖ' : '‚ùå'}`);
  
  const successCount = Object.values(results).filter(Boolean).length;
  const totalCount = Object.keys(results).length;
  
  console.log(`\nüéØ –ò—Ç–æ–≥–æ: ${successCount}/${totalCount} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ`);
  
  if (successCount === totalCount) {
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
  } else {
    console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
runAllTests().catch(console.error);
