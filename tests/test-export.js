const axios = require('axios');

const BASE_URL = 'http://localhost:3001';

async function testExportAPI() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–∫—Å–ø–æ—Ä—Ç–∞...\n');

    // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const userResponse = await axios.post(`${BASE_URL}/api/users`, {
      telegram_id: 'test_export_user_123',
      username: 'testexport',
      first_name: 'Test Export'
    });
    const userId = userResponse.data.id;
    console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Å ID: ${userId}\n`);

    // 2. –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    console.log('2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
    const transactions = [
      { amount: 50000, description: '–ó–∞—Ä–ø–ª–∞—Ç–∞', type: 'income', user_id: userId },
      { amount: 15000, description: '–ü—Ä–æ–¥—É–∫—Ç—ã', type: 'expense', user_id: userId },
      { amount: 8000, description: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç', type: 'expense', user_id: userId },
      { amount: 12000, description: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', type: 'expense', user_id: userId },
      { amount: 25000, description: '–§—Ä–∏–ª–∞–Ω—Å', type: 'income', user_id: userId }
    ];

    for (const transaction of transactions) {
      await axios.post(`${BASE_URL}/api/transactions`, transaction);
    }
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${transactions.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π\n`);

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç–∫—Å–ø–æ—Ä—Ç–µ
    console.log('3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —ç–∫—Å–ø–æ—Ä—Ç–µ...');
    const periods = ['week', 'month', 'quarter', 'year', 'all'];
    
    for (const period of periods) {
      try {
        const exportInfoResponse = await axios.get(`${BASE_URL}/api/users/${userId}/export-info?period=${period}`);
        console.log(`‚úÖ ${period}: ${exportInfoResponse.data.total_transactions} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, –¥–æ—Ö–æ–¥—ã: ${exportInfoResponse.data.total_income}, —Ä–∞—Å—Ö–æ–¥—ã: ${exportInfoResponse.data.total_expense}`);
      } catch (error) {
        console.log(`‚ùå ${period}: –û—à–∏–±–∫–∞ - ${error.response?.data?.error || error.message}`);
      }
    }
    console.log('');

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
    console.log('4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞...');
    for (const period of periods) {
      try {
        const transactionsResponse = await axios.get(`${BASE_URL}/api/users/${userId}/transactions?period=${period}&limit=10000`);
        console.log(`‚úÖ ${period}: –ü–æ–ª—É—á–µ–Ω–æ ${transactionsResponse.data.length} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
      } catch (error) {
        console.log(`‚ùå ${period}: –û—à–∏–±–∫–∞ - ${error.response?.data?.error || error.message}`);
      }
    }
    console.log('');

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    for (const period of periods) {
      try {
        const statsResponse = await axios.get(`${BASE_URL}/api/users/${userId}/stats?period=${period}`);
        console.log(`‚úÖ ${period}: ${statsResponse.data.total_transactions} —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π, –±–∞–ª–∞–Ω—Å: ${statsResponse.data.balance}`);
      } catch (error) {
        console.log(`‚ùå ${period}: –û—à–∏–±–∫–∞ - ${error.response?.data?.error || error.message}`);
      }
    }
    console.log('');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.response?.data || error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testExportAPI();
